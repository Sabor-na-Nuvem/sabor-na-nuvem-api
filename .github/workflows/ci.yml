# Nome do workflow
name: CI - API Sabor na Nuvem

# Define os gatilhos para rodar este workflow
on: [push, pull_request]

# Define as permissões da CI
permissions:
  contents: read
  packages: read

# Define os trabalhos (jobs) que serão executados
jobs:
  # Nome do nosso job principal
  build-and-test:
    runs-on: ubuntu-latest

    # Variáveis de ambiente para todo o job
    env:
      DATABASE_URL: postgresql://postgres:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/sabor_na_nuvem_test?schema=public
      JWT_SECRET: ${{ secrets.JWT_SECRET }} 
      NODE_ENV: test

    services:
      postgres:
        image: postgres:15-alpine
        # Configura o banco de dados do serviço com credenciais de teste
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: sabor_na_nuvem_test
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        # Opções para garantir que o banco esteja pronto antes de continuar
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1. Clona o código do seu repositório para a máquina virtual
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura o ambiente Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@joaoschmitz'
          cache: 'npm' # Habilita o cache para o npm

      # 3. Instala as dependências de forma otimizada para CI
      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 4. Roda o linter para verificar a qualidade do código
      - name: Run linter
        run: npm run lint

      # 5. Roda os testes unitários
      - name: Run unit tests
        run: npm run test:unit

      # 6. Gera o Prisma Client
      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          DATABASE_URL: postgresql://postgres:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/sabor_na_nuvem_test?schema=public

      # 7. Aplica as migrações do banco de dados
      - name: Run Prisma migrations
        run: npx prisma migrate deploy

      # 7. Roda os testes de integração
      - name: Run integration tests
        run: npm run test:integration
